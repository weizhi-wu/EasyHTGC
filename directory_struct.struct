/home/misc/user/
│
├── miniconda3/              # Your personal Python environment manager. Lives on the shared filesystem.
│   │                        # This is NOT transferred with your job.
│   └── envs/
│       └── deepzero-env/    # The specific Conda environment for this project.
│
├── datasets/                # A top-level directory for your original, large, RAW datasets.
│   │                        # This keeps your project folders clean.
│   └── my_large_dataset/    # The uncompressed data used to create the .tar.gz archive below.
│       ├── ...
│       └── ...
│
└── projects/                # A master folder to organize all your different research projects.
    │
    └── deepzero_project/    # <--- YOUR MAIN WORKING DIRECTORY FOR THIS PROJECT.
        │
        ├── experiment.sub   # The generic HTCondor job template file. Defines resources & files.
        │
        ├── workflow.dag     # The master DAG file. Defines the "loop" of experiments to run.
        │                    # This is the file you submit with `condor_submit_dag`.
        │
        ├── dataset.tar.gz   # The COMPRESSED large dataset archive. This file is transferred to
        │                    # the execute node and unpacked for high-speed local access.
        │
        ├── logs/            # A directory you create (`mkdir logs`) to store all job output.
        │   │                # Will be populated by HTCondor as jobs complete.
        │   ├── exp_1.out    # (Example file that appears AFTER a job runs)
        │   ├── exp_1.err    # (Example file that appears AFTER a job runs)
        │   └── exp_1.log    # (Example file that appears AFTER a job runs)
        │
        └── src/             # <--- THE ONLY FOLDER TRANSFERRED TO THE EXECUTE NODE.
            │                # This folder is a self-contained package for your experiment's logic.
            │
            ├── run_experiment.sh  # The executable shell wrapper (`chmod +x`).
            │                      # Sets up Conda, stages data from the .tar.gz to /tmp,
            │                      # runs main.py, and ensures cleanup.
            │
            ├── main.py            # The SYSTEM INTERFACE WRAPPER.
            │                      # A thin Python script that only parses command-line arguments
            │                      # (exp_id, data_path) and calls the core logic in runner.py.
            │
            ├── runner.py          # The CORE SCIENTIFIC LOGIC.
            │                      # Contains the actual experiment code (data loading, model
            │                      # training, etc.). It is "pure" Python, making it easy to test
            │                      # and reuse. It returns results as a dictionary.
            │
            ├── utils.py           # Any other Python modules or helper scripts your runner imports.
            │
            └── requirements.txt   # Good practice: A list of packages needed for your conda env.
